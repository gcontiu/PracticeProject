<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xmlns:context="http://www.springframework.org/schema/context"
    xmlns:mvc="http://www.springframework.org/schema/mvc"
    xmlns:aop="http://www.springframework.org/schema/aop"
    xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
	http://www.springframework.org/schema/beans/spring-beans-3.1.xsd
	http://www.springframework.org/schema/context
	http://www.springframework.org/schema/context/spring-context-3.1.xsd
	http://www.springframework.org/schema/mvc
    http://www.springframework.org/schema/mvc/spring-mvc-3.1.xsd
    http://www.springframework.org/schema/tx
    http://www.springframework.org/schema/tx/spring-tx-3.1.xsd
    http://www.springframework.org/schema/aop
    http://www.springframework.org/schema/aop/spring-aop-3.1.xsd">

    <!-- ================================================== -->
    <!--            High level configuration                -->
    <!-- ================================================== -->
    <context:annotation-config />
    <context:component-scan base-package="practice" />

    <mvc:annotation-driven/>

    <bean class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
        <property name="locations">
            <list>
                <value>classpath:database.properties</value>
            </list>
        </property>
    </bean>

    <!-- ================================================== -->
    <!--            DB & Hbn configurations                 -->
    <!-- ================================================== -->
    <bean id="dataSource" class="org.springframework.jdbc.datasource.DriverManagerDataSource">
        <property name="driverClassName" value="${jdbc.driver}" />
        <property name="url" value="${jdbc.url}" />
        <property name="username" value="${jdbc.username}" />
        <property name="password" value="${jdbc.password}" />
    </bean>

    <bean id="sessionFactory" class="org.springframework.orm.hibernate4.LocalSessionFactoryBean">
        <property name="dataSource" ref="dataSource" />
        <property name="packagesToScan" value="practice.model,practice.dao" />
        <property name="hibernateProperties">
            <props>
                <prop key="hibernate.dialect">org.hibernate.dialect.MySQL5Dialect</prop>
                <prop key="hibernate.hbm2ddl.auto">update</prop>
                <prop key="hibernate.show_sql">true</prop>
            </props>
        </property>
    </bean>

    <bean id="genericDao" abstract="true" class="practice.dao.GenericDao"/>

    <bean id="companyDao" class="practice.dao.CompanyDao" parent="genericDao" />

    <bean id="employeeDao" class="practice.dao.EmployeeDao" parent="genericDao" />



    <!-- ================================================== -->
    <!--            Validations                             -->
    <!-- ================================================== -->

    <bean id="validator" class="org.springframework.validation.beanvalidation.LocalValidatorFactoryBean" />
    <bean class="org.springframework.validation.beanvalidation.MethodValidationPostProcessor" />

    <bean id="employeeValidator" class="practice.controller.validator.EmployeeValidator"/>

    <bean id="employeePropertyEditor" class="practice.controller.validator.EmployeePropertyEditor" />


    <!-- ================================================== -->
    <!--            Transactions configuration              -->
    <!-- ================================================== -->

    <bean id="transactionManager" class="org.springframework.orm.hibernate4.HibernateTransactionManager" >
        <property name="sessionFactory" ref="sessionFactory" />
    </bean>

    <tx:advice id="daoAdvice" transaction-manager="transactionManager" >
        <tx:attributes>
            <tx:method name="*"/>
        </tx:attributes>
    </tx:advice>

    <aop:config>
        <aop:pointcut id="daoPointcut" expression="execution(* practice.dao.*.*(..))" />
        <aop:advisor advice-ref="daoAdvice" pointcut-ref="daoPointcut" />
    </aop:config>


</beans>